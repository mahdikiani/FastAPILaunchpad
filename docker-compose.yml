services:
  # db:
  #   image: postgres
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #   volumes:
  #     - ./db.data:/var/lib/postgresql/data
  #   networks:
  #     - data

  app:
    build: app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      - DATABASE_URL=sqlite+aiosqlite:///./logs/app.db
    volumes:
      - ./app:/app
    networks:
      - data
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROJECT_NAME}.entrypoints=web"
      - "traefik.http.routers.${PROJECT_NAME}.rule=Host(`${DOMAIN}`)"
      # - "traefik.http.routers.${PROJECT_NAME}.middlewares=https-redirect"
      - "traefik.http.routers.${PROJECT_NAME}-secure.entrypoints=websecure"
      - "traefik.http.routers.${PROJECT_NAME}-secure.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.${PROJECT_NAME}-secure.tls=true"
      - "traefik.http.routers.${PROJECT_NAME}-secure.tls.certresolver=letsencrypt"
      - "traefik.http.services.${PROJECT_NAME}.loadbalancer.server.port=8000"
      - "traefik.docker.network=traefik-net"

networks:
  traefik-net:
    external: true
  data: